// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace schema
{

using global::System;
using global::FlatBuffers;

public struct JoinRoomCommand : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static JoinRoomCommand GetRootAsJoinRoomCommand(ByteBuffer _bb) { return GetRootAsJoinRoomCommand(_bb, new JoinRoomCommand()); }
  public static JoinRoomCommand GetRootAsJoinRoomCommand(ByteBuffer _bb, JoinRoomCommand obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public JoinRoomCommand __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Token { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetTokenBytes() { return __p.__vector_as_arraysegment(4); }
  public string RoomId { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetRoomIdBytes() { return __p.__vector_as_arraysegment(6); }

  public static Offset<JoinRoomCommand> CreateJoinRoomCommand(FlatBufferBuilder builder,
      StringOffset tokenOffset = default(StringOffset),
      StringOffset roomIdOffset = default(StringOffset)) {
    builder.StartObject(2);
    JoinRoomCommand.AddRoomId(builder, roomIdOffset);
    JoinRoomCommand.AddToken(builder, tokenOffset);
    return JoinRoomCommand.EndJoinRoomCommand(builder);
  }

  public static void StartJoinRoomCommand(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddToken(FlatBufferBuilder builder, StringOffset tokenOffset) { builder.AddOffset(0, tokenOffset.Value, 0); }
  public static void AddRoomId(FlatBufferBuilder builder, StringOffset roomIdOffset) { builder.AddOffset(1, roomIdOffset.Value, 0); }
  public static Offset<JoinRoomCommand> EndJoinRoomCommand(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 4);  // token
    return new Offset<JoinRoomCommand>(o);
  }
};


}
